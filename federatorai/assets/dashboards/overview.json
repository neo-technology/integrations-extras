{
  "title": "ProphetStor Federator.ai Kafka Overview",
  "description": "[ProphetStor Federator.ai][1] is an AI-based solution that helps enterprise manage, optimize, auto-scale resources for any applications on Kubernetes. Using advanced machine learning algorithms to predict application workload, Federator.ai scales the right amount of resources at the right time for optimized application performance.\n\n* AI-based workload prediction for Kafka or any applications\n* Resource recommendation based on workload prediction, application, Kubernetes and other related metrics\n* Automatic scaling of application containers through [Datadog Watermark Pod Autoscaler (WPA)][4]\n\n[1]: https://www.prophetstor.com/federator-ai-for-aiops/federator-ai-datadog-integration/\n[4]: https://github.com/DataDog/watermarkpodautoscaler",
	"author_name": "Federator.ai",
    "widgets": [
        {
            "definition": {
                "url": "/static/images/logos/federatorai_large.svg",
                "sizing": "fit",
                "type": "image"
            },
            "layout": {
                "y": 1,
                "x": 0,
                "height": 13,
                "width": 29
            },
            "id": 0
        },
        {
            "definition": {
                "custom_links": [],
                "title_size": "16",
                "title": "Recommended Replicas vs Current/Desired Replicas",
                "title_align": "left",
                "yaxis": {
                    "max": "auto",
                    "include_zero": true,
                    "scale": "linear",
                    "min": "auto",
                    "label": ""
                },
                "show_legend": false,
                "requests": [
                    {
                        "q": "avg:federatorai.recommendation{$kube_cluster,$kube_namespace,$kube_deployment,$kube_cluster_name,$cluster_name,resource:replicas,$kube_stateful_set,resource:replicas,metric_source:kafka}",
                        "style": {
                            "line_width": "normal",
                            "palette": "warm",
                            "line_type": "solid"
                        },
                        "display_type": "line"
                    },
                    {
                        "q": "avg:kubernetes_state.deployment.replicas_available{$kube_cluster,$kube_namespace,$kube_deployment,$kube_cluster_name,$cluster_name,$kube_stateful_set}",
                        "style": {
                            "line_width": "normal",
                            "palette": "cool",
                            "line_type": "solid"
                        },
                        "display_type": "line"
                    },
                    {
                        "q": "avg:kubernetes_state.deployment.replicas_desired{$kube_cluster,$kube_namespace,$kube_deployment,$kube_cluster_name,$cluster_name,$kube_stateful_set}",
                        "style": {
                            "line_width": "normal",
                            "palette": "cool",
                            "line_type": "solid"
                        },
                        "display_type": "line"
                    },
                    {
                        "q": "avg:kubernetes_state.statefulset.replicas_current{$kube_cluster,$kube_namespace,$kube_cluster_name,$cluster_name,$kube_stateful_set,$kube_deployment}",
                        "style": {
                            "line_width": "normal",
                            "palette": "cool",
                            "line_type": "solid"
                        },
                        "display_type": "line"
                    },
                    {
                        "q": "avg:kubernetes_state.statefulset.replicas_desired{$kube_cluster,$kube_namespace,$kube_cluster_name,$cluster_name,$kube_stateful_set,$kube_deployment}",
                        "style": {
                            "line_width": "normal",
                            "palette": "cool",
                            "line_type": "solid"
                        },
                        "display_type": "line"
                    }
                ],
                "type": "timeseries",
                "legend_size": "0"
            },
            "layout": {
                "y": 15,
                "x": 0,
                "height": 15,
                "width": 47
            },
            "id": 1
        },
        {
            "definition": {
                "custom_links": [],
                "title_size": "16",
                "title": "Production vs Consumption vs Production Prediction",
                "title_align": "left",
                "yaxis": {
                    "max": "auto",
                    "include_zero": true,
                    "scale": "linear",
                    "min": "auto",
                    "label": ""
                },
                "show_legend": false,
                "requests": [
                    {
                        "q": "avg:federatorai.kafka.broker_offset_rate{$kube_cluster,$topic,$kube_cluster_name,$cluster_name}, avg:federatorai.kafka.consumer_offset_rate{$kube_cluster,$topic,$consumer_group,$kube_cluster_name,$cluster_name}, avg:federatorai.prediction.kafka{source_metric:federatorai.kafka.broker_offset_rate,$kube_cluster,$topic,$kube_cluster_name,$cluster_name}",
                        "style": {
                            "line_width": "normal",
                            "palette": "dog_classic",
                            "line_type": "solid"
                        },
                        "display_type": "line"
                    }
                ],
                "type": "timeseries",
                "legend_size": "0"
            },
            "layout": {
                "y": 15,
                "x": 48,
                "height": 15,
                "width": 47
            },
            "id": 2
        },
        {
            "definition": {
                "custom_links": [],
                "title_size": "16",
                "title": "Kafka Consumer Lag",
                "title_align": "left",
                "yaxis": {
                    "max": "auto",
                    "include_zero": true,
                    "scale": "linear",
                    "min": "auto",
                    "label": ""
                },
                "show_legend": false,
                "requests": [
                    {
                        "q": "(sum:kafka.consumer_lag{$kube_cluster,$consumer_group,$topic,$kube_cluster_name,$cluster_name}+abs(sum:kafka.consumer_lag{$kube_cluster,$consumer_group,$topic,$kube_cluster_name,$cluster_name}))/2/count_not_null(sum:kafka.consumer_lag{$kube_cluster,$consumer_group,$topic,$kube_cluster_name,$cluster_name} by {host})",
                        "style": {
                            "line_width": "normal",
                            "palette": "purple",
                            "line_type": "solid"
                        },
                        "display_type": "bars"
                    }
                ],
                "type": "timeseries",
                "legend_size": "0"
            },
            "layout": {
                "y": 31,
                "x": 0,
                "height": 15,
                "width": 47
            },
            "id": 3
        },
        {
            "definition": {
                "custom_links": [],
                "title_size": "16",
                "title": "Consumer Queue Latency (msec)",
                "title_align": "left",
                "yaxis": {
                    "include_zero": false
                },
                "show_legend": false,
                "requests": [
                    {
                        "q": "((sum:kafka.consumer_lag{$kube_cluster,$topic,$consumer_group,$kube_cluster_name,$cluster_name}+abs(sum:kafka.consumer_lag{$kube_cluster,$topic,$consumer_group,$kube_cluster_name,$cluster_name}))/2/count_not_null(sum:kafka.consumer_lag{$kube_cluster,$topic,$consumer_group,$kube_cluster_name,$cluster_name} by {host})/avg:federatorai.kafka.consumer_offset_rate{$kube_cluster,$topic,$consumer_group,$kube_cluster_name,$cluster_name})*60*1000",
                        "style": {
                            "line_width": "normal",
                            "palette": "dog_classic",
                            "line_type": "solid"
                        },
                        "display_type": "line"
                    }
                ],
                "type": "timeseries",
                "legend_size": "0"
            },
            "layout": {
                "y": 31,
                "x": 48,
                "height": 15,
                "width": 47
            },
            "id": 4
        },
        {
            "definition": {
                "custom_links": [],
                "title_size": "16",
                "title": "Deployment Memory Usage",
                "title_align": "left",
                "yaxis": {
                    "max": "auto",
                    "include_zero": true,
                    "scale": "linear",
                    "min": "auto",
                    "label": ""
                },
                "show_legend": false,
                "requests": [
                    {
                        "q": "sum:kubernetes.memory.usage{$kube_cluster,$kube_namespace,$kube_deployment,$kube_cluster_name,$cluster_name,$kube_stateful_set}",
                        "style": {
                            "line_width": "normal",
                            "palette": "cool",
                            "line_type": "solid"
                        },
                        "display_type": "area"
                    }
                ],
                "type": "timeseries",
                "legend_size": "0"
            },
            "layout": {
                "y": 47,
                "x": 0,
                "height": 15,
                "width": 47
            },
            "id": 5
        },
        {
            "definition": {
                "custom_links": [],
                "title_size": "16",
                "title": "Deployment CPU Usage",
                "title_align": "left",
                "yaxis": {
                    "max": "auto",
                    "include_zero": true,
                    "scale": "linear",
                    "min": "auto",
                    "label": ""
                },
                "show_legend": false,
                "requests": [
                    {
                        "q": "sum:kubernetes.cpu.usage.total{$kube_cluster,$kube_namespace,$kube_deployment,$kube_cluster_name,$cluster_name,$kube_stateful_set}",
                        "style": {
                            "line_width": "normal",
                            "palette": "dog_classic",
                            "line_type": "solid"
                        },
                        "display_type": "area"
                    }
                ],
                "type": "timeseries",
                "legend_size": "0"
            },
            "layout": {
                "y": 47,
                "x": 48,
                "height": 15,
                "width": 47
            },
            "id": 6
        },
        {
            "definition": {
                "tick_pos": "50%",
                "show_tick": false,
                "type": "note",
                "tick_edge": "left",
                "text_align": "left",
                "content": "With integration of [ProphetStor Federator.ai][1], users can easily track the Kafka message production/consumption rate, as well as the prediction of message production rate from Federator.ai dashboard. Based on the prediction or message production rate, Federator.ai automatically scales Kafka consumer replicas to handle the workload. This can be visualized from Federator.ai dashboard where the recommended consumer replicas and the current number of consumer replicas are shown. Additionally, overall consumer lags as well as the average latency in the queue before a message is received by a consumer are also shown on the dashboard for better performance monitoring.\n\n[1]: https://www.prophetstor.com/federator-ai-for-aiops/federator-ai-datadog-integration/",
                "font_size": "14",
                "background_color": "green"
            },
            "layout": {
                "y": 1,
                "x": 31,
                "height": 13,
                "width": 64
            },
            "id": 7
        }
    ],
    "template_variables": [
        {
            "default": "*",
            "prefix": "kube_cluster",
            "name": "kube_cluster"
        },
        {
            "default": "*",
            "prefix": "kube_cluster_name",
            "name": "kube_cluster_name"
        },
        {
            "default": "*",
            "prefix": "cluster_name",
            "name": "cluster_name"
        },
        {
            "default": "*",
            "prefix": "kube_namespace",
            "name": "kube_namespace"
        },
        {
            "default": "*",
            "prefix": "kube_deployment",
            "name": "kube_deployment"
        },
        {
            "default": "*",
            "prefix": "kube_stateful_set",
            "name": "kube_stateful_set"
        },
        {
            "default": "*",
            "prefix": "topic",
            "name": "topic"
        },
        {
            "default": "*",
            "prefix": "consumer_group",
            "name": "consumer_group"
        }
    ],
  "layout_type": "free",
  "is_read_only": true,
  "notify_list": [],
  "id": 30323
}
